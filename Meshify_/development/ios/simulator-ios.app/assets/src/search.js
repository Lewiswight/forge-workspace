// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'jqm', 'backbone', 'underscore', 'marionette', 'Meshable', 'Events'], function($, jqm, Backbone, _, Marionette, Meshable, Events) {
    var collections, make_collection, searchView, search_prop, searchsView;

    make_collection = function() {
      var nodeCollection;

      nodeCollection = new collections([
        new search_prop({
          template: "#search-template"
        })
      ]);
      return nodeCollection;
    };
    search_prop = Backbone.Model.extend({
      defaults: {
        searchInput: ""
      },
      setInput: function(msg) {
        return this.set({
          searchInput: msg
        });
      }
    });
    collections = Backbone.Collection.extend({
      model: search_prop
    });
    searchsView = Backbone.Marionette.ItemView.extend({
      initialize: function(options) {
        this.template = options.model.attributes.template;
        return this.bindTo(this.model, "change", this.render);
      },
      tagName: 'li',
      className: "list_item",
      events: {
        "click #search-btn": "update"
      },
      update: function() {
        var includeUnits, param, resultType, route, searchField;

        if (!forge.is.connection.connected()) {
          forge.notification.alert("Failed to Load", "No Internet Connection");
          $("body").removeClass('ui-disabled');
          $.mobile.hidePageLoadingMsg();
          return;
        }
        includeUnits = $('#include-units').prop("checked");
        resultType = $('#flip-3').val();
        searchField = $('#search-main').val();
        param = new Object({
          search: searchField
        });
        forge.flurry.customEvent("start up", param, function() {
          return console.log("set sent to flury");
        }, function(e) {
          return console.log(e);
        });
        if (searchField === "") {
          searchField = "_";
        }
        route = "#searching/" + searchField + "/" + resultType;
        return Backbone.history.navigate(route, {
          trigger: true,
          replace: false,
          pushState: false
        });
      }
    });
    searchView = Backbone.Marionette.CompositeView.extend({
      itemView: searchsView,
      itemViewOptions: this.model,
      template: "#wrapper_ul",
      itemViewContainer: "ul",
      appendHtml: function(collectionView, itemView) {
        return collectionView.$("#placeholder").append(itemView.el);
      }
    });
    return Meshable.vent.on("goto:search", function() {
      var search;

      Meshable.searchButton.setActive();
      search = new searchView({
        collection: make_collection()
      });
      Meshable.currentpage = "search";
      search.render();
      $('#mainDiv').empty();
      $('#mainDiv').append($(search.el));
      $("#mainDiv").trigger('create');
      $.mobile.hidePageLoadingMsg();
      return $("body").removeClass('ui-disabled');
    });
  });

}).call(this);
