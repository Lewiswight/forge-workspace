// Generated by CoffeeScript 1.3.3
(function() {

  define(["jquery", "backbone", "underscore", "marionette", "Meshable", "Events"], function($, Backbone, _, Marionette, Meshable, Events) {
    var AngryCat, AngryCatView, AngryCats, AngryCatsView;
    $(document).ready(function() {
      var cats_collection;
      cats_collection = new AngryCats([
        new AngryCat({
          name: "Wet Cat",
          image_path: "images/cat1.jpg"
        }), new AngryCat({
          name: "Bitey Cat",
          image_path: "images/cat2.jpg"
        }), new AngryCat({
          name: "Surprised Cat",
          image_path: "images/cat3.jpg"
        })
      ]);
      cats_collection.add(new AngryCat({
        name: "Another Cat",
        image_path: "images/cat4.jpg",
        rank: cats_collection.size() + 1
      }));
      return Meshable.angryCatsView = new AngryCatsView({
        collection: cats_collection
      });
    });
    Meshable.start_up = function() {
      return Meshable.loginRegion.show(Meshable.angryCatsView);
    };
    AngryCat = Backbone.Model.extend({
      defaults: {
        votes: 0
      },
      rankUp: function() {
        return this.set({
          rank: this.get('rank') - 1
        });
      },
      rankDown: function() {
        return this.set({
          rank: this.get('rank') + 1
        });
      },
      addVote: function() {
        return this.set({
          votes: this.get('votes') + 1
        });
      }
    });
    AngryCats = Backbone.Collection.extend({
      model: AngryCat,
      rankUp: function(cat) {
        var otherCat, rankToSwap;
        rankToSwap = cat.get('rank') - 1;
        otherCat = this.at(rankToSwap - 1);
        cat.rankUp();
        return otherCat.rankDown();
      },
      rankDown: function(cat) {
        var otherCat, rankToSwap;
        rankToSwap = cat.get('rank') + 1;
        otherCat = this.at(rankToSwap - 1);
        cat.rankDown();
        return otherCat.rankUp();
      },
      comparator: function(cat) {
        return cat.get('rank');
      },
      initialize: function(cats) {
        var cat, rank, self, _i, _len;
        rank = 1;
        for (_i = 0, _len = cats.length; _i < _len; _i++) {
          cat = cats[_i];
          cat.set('rank', rank);
          rank = rank + 1;
        }
        this.on("add", function(cat) {
          var error;
          if (!cat.get('rank')) {
            error = Error("Cat must have a rank defined before being added to the collection");
            throw error;
          }
        });
        self = this;
        Meshable.vent.on("rank:up", function(cat) {
          if (cat.get("rank") === 1) {
            return true;
          }
          self.rankUp(cat);
          return self.sort();
        });
        Meshable.vent.on("rank:down", function(cat) {
          if (cat.get("rank") === self.size()) {
            return true;
          }
          self.rankDown(cat);
          return self.sort();
        });
        return Meshable.vent.on("cat:disqualify", function(cat) {
          var catsToUprank, dqrank;
          dqrank = cat.get('rank');
          catsToUprank = self.filter(function(localcat) {
            return localcat.get('rank') > dqrank;
          });
          catsToUprank.forEach(function(cat) {
            return cat.rankUp();
          });
          return self.trigger('reset');
        });
      }
    });
    AngryCatView = Backbone.Marionette.ItemView.extend({
      initialize: function() {
        return this.bindTo(this.model, "change:votes", this.render);
      },
      template: '#angry_cat-template',
      tagName: 'tr',
      className: 'angry_cat',
      events: {
        "click .rank_down img": "rankDown",
        "click .rank_up img": "rankUp",
        "click a.disqualify": "disqualify"
      },
      rankUp: function() {
        Meshable.vent.trigger("rank:up", this.model);
        return this.model.addVote();
      },
      rankDown: function() {
        Meshable.vent.trigger("rank:down", this.model);
        return this.model.addVote();
      },
      disqualify: function() {
        Meshable.vent.trigger("cat:disqualify", this.model);
        this.model.destroy();
        return Meshable.router.navigate("somewhere", {
          trigger: true
        });
      }
    });
    return AngryCatsView = Backbone.Marionette.CompositeView.extend({
      tagName: "table",
      id: "angry_cats",
      className: "table-striped table-bordered",
      template: "#angry_cats-template",
      itemView: AngryCatView,
      appendHtml: function(collectionView, itemView) {
        return collectionView.$("tbody").append(itemView.el);
      }
    });
  });

}).call(this);
