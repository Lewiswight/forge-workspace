// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'jqm', 'backbone', 'underscore', 'marionette', 'Meshable', 'Events'], function($, jqm, Backbone, _, Marionette, Meshable, Events) {
    var displayResults, node, nodeCompView, nodeView, nodes;

    node = Backbone.Model.extend({
      initialize: function() {
        return this.set({
          trafficlight: "green"
        });
      },
      defaults: {
        trafficlight: "green"
      }
    });
    nodes = Backbone.Collection.extend({
      model: node
    });
    nodeView = Backbone.Marionette.ItemView.extend({
      initialize: function(node) {
        return this.bindTo(this.model, "change", this.render);
      },
      template: '#nodeitem-template',
      tagName: 'li',
      className: "list_item_node",
      displayNode: function() {
        $("body").addClass('ui-disabled');
        $.mobile.showPageLoadingMsg("a", "Loading", false);
        Meshable.router.navigate("/gateway/" + this.model.attributes.macaddress + "/" + this.model.attributes.node.NodeId, {
          trigger: false
        });
        return Meshable.vent.trigger("goto:node", this.model.attributes);
      }
    });
    nodeCompView = Backbone.Marionette.CompositeView.extend({
      itemView: nodeView,
      template: "#wrapper_ul",
      itemViewContainer: "ul",
      appendHtml: function(collectionView, itemView) {
        return collectionView.$("#placeholder").append(itemView.el);
      }
    });
    Meshable.vent.on("goto:nodes", function(macaddress) {
      var _this = this;

      $("body").addClass('ui-disabled');
      $.mobile.showPageLoadingMsg("a", "Loading", false);
      return window.forge.ajax({
        url: Meshable.rooturl + "/api/gateway",
        data: {
          macaddress: macaddress
        },
        dataType: "json",
        type: "GET",
        error: function(e) {
          return forge.notification.alert("Error", e.message);
        },
        success: function(data) {
          if (data.isAuthenticated === false) {
            return alert("auth:logout");
          } else if (data.length === 0) {
            $("body").removeClass('ui-disabled');
            $.mobile.hidePageLoadingMsg();
            forge.notification.alert("No units at this location", "");
            return Backbone.history.navigate("gateways", {
              trigger: false,
              replace: true
            });
          } else {
            return displayResults(data);
          }
        }
      });
    });
    return displayResults = function(data) {
      var nodeCoView, nodeCollection, obj, tempNode, _i, _j, _len, _len1;

      nodeCollection = new nodes;
      if (data.length < 3) {
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          obj = data[_i];
          if (obj.nodetemplate !== "mainMistaway") {
            $("body").addClass('ui-disabled');
            $.mobile.showPageLoadingMsg();
            Meshable.vent.trigger("goto:node", obj);
            return;
          }
        }
      }
      for (_j = 0, _len1 = data.length; _j < _len1; _j++) {
        obj = data[_j];
        if (obj.nodetemplate !== "mainMistaway") {
          tempNode = new node;
          nodeCollection.add(tempNode.parse(obj));
        }
      }
      nodeCoView = new nodeCompView({
        collection: nodeCollection
      });
      Meshable.currentpage = "nodes";
      nodeCoView.render();
      $('#mainDiv').empty();
      $('#mainDiv').append($(nodeCoView.el));
      $("#mainDiv").trigger('create');
      $("body").removeClass('ui-disabled');
      return $.mobile.hidePageLoadingMsg();
    };
  });

}).call(this);
