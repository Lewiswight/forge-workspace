// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'backbone', 'underscore', 'marionette', 'Meshable', 'Events'], function($, Backbone, _, Marionette, Meshable, Events) {
    var AuthModel, AuthView;

    Meshable.addInitializer(function(options) {
      var authview;

      authview = new AuthView({
        model: options.authModel
      });
      return Meshable.loginRegion.show(authview);
    });
    AuthModel = Backbone.Model.extend({
      defaults: {
        username: "UserName",
        fakepassword: "Password",
        password: "",
        statusmsg: "",
        numberofattempts: 0
      },
      updateMsg: function(msg) {
        return this.set({
          statusmsg: msg
        });
      },
      updateUsername: function(un) {
        return this.set({
          username: un
        });
      },
      updatePassword: function(pw) {
        return this.set({
          password: pw
        });
      }
    });
    AuthView = Backbone.Marionette.ItemView.extend({
      initialize: function(AuthModel) {
        return this.bindTo(this.model, "change", this.render);
      },
      template: '#auth-template',
      onShow: function() {
        this.passwordcheck();
        return $('#username-input').addClass('italic');
      },
      onRender: function() {
        return this.passwordcheck();
      },
      events: {
        "click #auth-submit-btn": "submitauth",
        "focus #username-input": "focususername",
        "blur #username-input": "blurusername",
        "blur #password-input": "blurpassword",
        "focus #fakepassword-input": "focusfakepassword"
      },
      focusfakepassword: function() {
        $('#fakepassword-input').hide();
        $('#password-input').show();
        return $('#password-input').focus();
      },
      passwordcheck: function() {
        if ($('#password-input').val() === '') {
          $('#password-input').hide();
          return $('#fakepassword-input').show();
        }
      },
      focususername: function() {
        if ($('#username-input').val() === this.model.defaults.username) {
          $('#username-input').val("");
          return $('#username-input').removeClass('italic');
        }
      },
      submitauth: function() {
        var self;

        this.model.updatePassword($('#password-input').val());
        this.model.updateUsername($('#username-input').val());
        self = this;
        return $.ajax({
          url: Meshable.rooturl + "/api/authentication",
          data: {
            UserName: this.model.get("username"),
            Password: this.model.get("password"),
            RememberMe: $('#RememberMe').is(":checked"),
            isapicall: true
          },
          dataType: "json",
          type: "POST",
          traditional: true,
          error: function(e) {
            return alert(e);
          },
          success: function(data) {
            if (data.IsAuthenticated === true) {
              alert("I'm in");
              return self.model.updateMsg(data.statusMsg);
            } else {
              alert("I'm out");
              return self.model.updateMsg(data.statusMsg);
            }
          }
        });
      },
      blurpassword: function() {
        if ($('#password-input').val() === '') {
          $('#fakepassword-input').val("Password").show();
          return $('#password-input').hide();
        }
      },
      blurusername: function() {
        var self;

        this.model.updateUsername($('#username-input').val());
        if ($('#username-input').val() === this.model.defaults.username) {
          return $('#username-input').addClass('italic');
        } else {
          self = this;
          return $.ajax({
            url: Meshable.rooturl + "/Account/doesusernameExist",
            data: {
              username: this.model.get("username")
            },
            dataType: "json",
            type: "POST",
            traditional: true,
            error: function(e) {
              return self.model.updateMsg("Sorry your username is not found!");
            },
            success: function(data) {
              if (data === false) {
                self.model.updateMsg("Awesome, we found your username");
                return $('#fakepassword-input').focus();
              } else {
                self.model.updateMsg("Sorry, your username isn't in the system");
                return $('#username-input').focus();
              }
            }
          });
        }
      }
    });
    return new AuthModel;
  });

}).call(this);
