// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'jqm', 'backbone', 'underscore', 'marionette', 'Meshable', 'Events'], function($, jqm, Backbone, _, Marionette, Meshable, Events) {
    var LoadTen, displayResults, gateway, gatewayCompView, gatewayView, gateways, make_collection;

    make_collection = function() {
      return forge.request.ajax({
        url: Meshable.rooturl + "/api/dashboard",
        dataType: "json",
        type: "GET",
        error: function(e) {
          return forge.notification.alert("Error", e.message);
        },
        success: function(data) {
          var cModel, model, nodeCollection, _i, _len;

          nodeCollection = new dashboards;
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            model = data[_i];
            cModel = new dashboard;
            nodeCollection.add(cModel.parse(model));
          }
          return nodeCollection;
        }
      });
      /*models = JSON.parse """[{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"},{"address":"123 Main Ave","channelname":"energy cost","post":"","pre":"$","status":"The status","trafficlight":"green","value":"1232"}]"""
      		
      		nodeCollection = new dashboards
      		
      		for model in models
      			cModel = new dashboard
      			nodeCollection.add cModel.parse(model)
      		
      		return nodeCollection
      */

    };
    gateway = Backbone.Model.extend({
      initialize: function() {
        return this.set({
          trafficlight: "green"
        });
      },
      defaults: {
        trafficlight: "green"
      }
    });
    gateways = Backbone.Collection.extend({
      model: gateway
    });
    gatewayView = Backbone.Marionette.ItemView.extend({
      initialize: function(node) {
        this.bindTo(this.model, "change", this.render);
        if (node.model.attributes.nodetemplate === "gateway") {
          return this.template = '#gatewayitem-template';
        } else {
          return this.template = '#nodeitem-' + node.model.attributes.nodetemplate;
        }
      },
      template: '#gatewayitem-template',
      tagName: 'li',
      className: "list_item",
      id: "gatewayItm",
      events: {
        "click #add10": "add10Items"
      },
      add10Items: function() {
        $("body").addClass('ui-disabled');
        $.mobile.showPageLoadingMsg("a", "Loading", false);
        if (!forge.is.connection.connected()) {
          forge.notification.alert("Failed to Load", "No Internet Connection");
          $("body").removeClass('ui-disabled');
          $.mobile.hidePageLoadingMsg();
          return;
        }
        Meshable.current_index_gw += 1;
        LoadTen(Meshable.current_searchTerm, Meshable.current_index_gw);
        return this.model.destroy();
      }
    });
    gatewayCompView = Backbone.Marionette.CompositeView.extend({
      itemView: gatewayView,
      template: "#wrapper_ul",
      itemViewContainer: "ul",
      appendHtml: function(collectionView, itemView) {
        return collectionView.$("#placeholder").append(itemView.el);
      }
    });
    Meshable.vent.on("goto:gateways", function(refresh, searchField) {
      $("body").addClass('ui-disabled');
      $.mobile.showPageLoadingMsg("a", "Loading", false);
      if (!refresh && Meshable.current_gateways !== "") {
        Meshable.nodeCollection = new gateways;
        displayResults(Meshable.current_gateways);
        return;
      }
      Meshable.current_index = 0;
      Meshable.current_index_gw = 0;
      Meshable.nodeCollection = new gateways;
      Meshable.current_gateways = [];
      Meshable.currentDataObj = "";
      if (!forge.is.connection.connected()) {
        forge.notification.alert("Failed to Load", "No Internet Connection");
        $("body").removeClass('ui-disabled');
        $.mobile.hidePageLoadingMsg();
        window.history.back();
      } else {
        return LoadTen(searchField, Meshable.current_index);
      }
    });
    LoadTen = function(searchField, index) {
      var _this = this;

      return forge.request.ajax({
        url: Meshable.rooturl + "/api/Locations",
        data: {
          term: searchField,
          systemTypes: "",
          problemStatuses: "",
          customGroups: "",
          pageIndex: index,
          pageSize: 10
        },
        dataType: "json",
        type: "GET",
        timeout: 15000,
        error: function(e) {
          forge.notification.alert("Error", e.message);
          $("body").removeClass('ui-disabled');
          $.mobile.hidePageLoadingMsg();
          if (index === 0) {
            return window.history.back();
          }
        },
        success: function(data) {
          var TempObj, dataObj, item, node, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref;

          dataObj = new Object;
          dataObj.list = [];
          data = data.CurrentPageListItems;
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            node = data[_i];
            if (node.person.first === "") {
              node.person.first = "Unknown";
            }
            if (node.person.last === "") {
              node.person.last = "Unknown";
            }
            if (node.person.phone1 === "") {
              node.person.phone1 = "000-000-0000";
            }
            if (node.address.city === "") {
              node.address.city = "Unknown";
            }
            if (node.address.state === "") {
              node.address.state = "Unknown";
            }
            if (node.address.street1 === "") {
              node.address.street1 = "unknown";
            }
            if (node.address.zip === "") {
              node.address.zip = "unknown";
            }
            TempObj = node;
            dataObj.list.push(TempObj);
          }
          if (Meshable.currentDataObj !== "") {
            _ref = dataObj.list;
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              item = _ref[_j];
              Meshable.currentDataObj.list.push(item);
            }
          } else {
            Meshable.currentDataObj = dataObj;
          }
          if (data.isAuthenticated === false) {
            myvent.trigger("auth:logout");
            $("body").removeClass('ui-disabled');
            return $.mobile.hidePageLoadingMsg();
          } else if (data.length === 0) {
            forge.notification.alert("No Results", "");
            $("body").removeClass('ui-disabled');
            return $.mobile.hidePageLoadingMsg();
          } else {
            for (_k = 0, _len2 = data.length; _k < _len2; _k++) {
              node = data[_k];
              node.nodetemplate = "gateway";
            }
            for (_l = 0, _len3 = data.length; _l < _len3; _l++) {
              node = data[_l];
              Meshable.current_gateways.push(node);
            }
            return displayResults(data);
          }
        }
      });
    };
    return displayResults = function(data) {
      var cModel, gateView, model, tempNode, _i, _len;

      for (_i = 0, _len = data.length; _i < _len; _i++) {
        model = data[_i];
        cModel = new gateway;
        Meshable.nodeCollection.add(cModel.parse(model));
      }
      tempNode = new gateway({
        nodetemplate: "add"
      });
      Meshable.nodeCollection.add(tempNode);
      gateView = new gatewayCompView({
        collection: Meshable.nodeCollection
      });
      Meshable.currentpage = "gateways";
      gateView.render();
      $('#mainDiv').empty();
      $('#mainDiv').append($(gateView.el));
      $("#mainPage").trigger('create');
      $.mobile.hidePageLoadingMsg();
      return $("body").removeClass('ui-disabled');
    };
  });

}).call(this);
