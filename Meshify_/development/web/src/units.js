// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'jqm', 'backbone', 'underscore', 'marionette', 'Meshable', 'Events'], function($, jqm, Backbone, _, Marionette, Meshable, Events) {
    var displayResults, nodeCompView, nodeView, nodea, nodes, showResults;

    nodea = Backbone.Model.extend({
      initialize: function() {
        return this.set({
          trafficlight: "green"
        });
      },
      defaults: {
        trafficlight: "green"
      }
    });
    nodes = Backbone.Collection.extend({
      model: nodea
    });
    nodeView = Backbone.Marionette.ItemView.extend({
      initialize: function(node) {
        this.bindTo(this.model, "change", this.render);
        if (node.model.attributes.nodetemplate === "header") {
          this.template = "#label-template";
          return this.$el.attr('data-role', 'list-divider');
        } else {
          return this.template = '#nodeitem-template';
        }
      },
      tagName: 'li',
      className: "list_item_node",
      onRender: function() {
        $("#mainDiv").trigger('create');
        return $("#mainPage").trigger('create');
      },
      displayNode: function() {
        $("body").addClass('ui-disabled');
        $.mobile.showPageLoadingMsg("a", "Loading", false);
        Meshable.router.navigate("/gateway/" + this.model.attributes.macaddress + "/" + this.model.attributes.node.NodeId, {
          trigger: false
        });
        return Meshable.vent.trigger("goto:node", this.model.attributes);
      }
    });
    nodeCompView = Backbone.Marionette.CompositeView.extend({
      itemView: nodeView,
      template: "#wrapper_ul",
      itemViewContainer: "ul",
      appendHtml: function(collectionView, itemView) {
        return collectionView.$("#placeholder").append(itemView.el);
      }
    });
    Meshable.vent.on("goto:units", function(refresh, routerObj) {
      var _this = this;

      $("body").addClass('ui-disabled');
      $.mobile.showPageLoadingMsg("a", "Loading", false);
      if (routerObj !== "") {
        displayResults(routerObj);
        return;
      }
      if (!refresh && Meshable.current_units !== "" && Meshable.refreshUnits === false) {
        showResults(Meshable.current_units);
        return;
      }
      if (Meshable.currentDataObj !== "") {
        displayResults(Meshable.currentDataObj);
        return;
      }
      $("body").addClass('ui-disabled');
      $.mobile.showPageLoadingMsg("a", "Loading", false);
      return window.forge.ajax({
        url: Meshable.rooturl + "/api/Locations",
        data: {
          term: "",
          systemTypes: "",
          problemStatuses: "",
          customGroups: "",
          pageIndex: 0,
          pageSize: 10
        },
        dataType: "json",
        type: "GET",
        error: function(e) {
          return alert("An error occurred on search... sorry!");
        },
        success: function(data) {
          var TempObj, dataObj, node, _i, _len;

          dataObj = new Object;
          dataObj.list = [];
          data = data.CurrentPageListItems;
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            node = data[_i];
            TempObj = node;
            dataObj.list.push(TempObj);
          }
          if (data.isAuthenticated === false) {
            return Backbone.history.navigate("logout", {
              replace: false,
              trigger: true
            });
          } else if (data.length === 0) {
            return alert("No Results");
          } else {
            return displayResults(dataObj);
          }
        }
      });
    });
    displayResults = function(dataObj) {
      var count, listlen, nodeCollection, obj, _i, _len, _ref, _results;

      Meshable.refreshUnits = false;
      nodeCollection = new nodes;
      listlen = dataObj.list.length;
      count = 0;
      _ref = dataObj.list;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        obj = _ref[_i];
        _results.push((function(obj) {
          var _this = this;

          $.mobile.showPageLoadingMsg("a", "Loading", false);
          return window.forge.ajax({
            url: Meshable.rooturl + "/api/gateway",
            data: {
              macaddress: obj.gateway.macaddress
            },
            dataType: "json",
            type: "GET",
            error: function(e) {
              return alert("An error occurred while getting node details... sorry!");
            },
            success: function(data) {
              var obja, tempNode, _j, _len1;

              if (data.isAuthenticated === false) {
                return Backbone.history.navigate("logout", {
                  replace: false,
                  trigger: true
                });
              } else {
                tempNode = new nodea({
                  first: obj.person.first,
                  nodetemplate: "header",
                  last: obj.person.last
                });
                nodeCollection.add(tempNode);
                for (_j = 0, _len1 = data.length; _j < _len1; _j++) {
                  obja = data[_j];
                  if (obja.nodetemplate !== "mainMistaway") {
                    tempNode = new nodea;
                    nodeCollection.add(tempNode.parse(obja));
                  }
                }
                count += 1;
                if (count >= listlen) {
                  Meshable.current_units = nodeCollection;
                  return showResults(nodeCollection);
                }
              }
            }
          });
        })(obj));
      }
      return _results;
    };
    return showResults = function(nodeCollection) {
      var nodeCoView;

      nodeCoView = new nodeCompView({
        collection: nodeCollection
      });
      Meshable.currentpage = "units";
      nodeCoView.render();
      $('#mainDiv').empty();
      $('#mainDiv').append($(nodeCoView.el));
      $("#mainDiv").trigger('create');
      $.mobile.hidePageLoadingMsg();
      $("body").removeClass('ui-disabled');
      $("body").removeClass('ui-disabled');
      $("#mainPage a").removeClass('ui-btn-active');
      return $("#nodesbtnn").addClass('ui-btn-active');
    };
  });

}).call(this);
