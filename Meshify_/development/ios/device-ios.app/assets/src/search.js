// Generated by CoffeeScript 1.6.2
(function() {
  define(['jquery', 'jqm', 'backbone', 'underscore', 'marionette', 'Meshable', 'Events'], function($, jqm, Backbone, _, Marionette, Meshable, Events) {
    var collections, make_collection, searchView, search_prop, searchsView;

    make_collection = function() {
      var nodeCollection;

      nodeCollection = new collections([
        new search_prop({
          template: "#search-template"
        })
      ]);
      return nodeCollection;
    };
    search_prop = Backbone.Model.extend({
      defaults: {
        searchInput: ""
      },
      setInput: function(msg) {
        return this.set({
          searchInput: msg
        });
      }
    });
    collections = Backbone.Collection.extend({
      model: search_prop
    });
    searchsView = Backbone.Marionette.ItemView.extend({
      initialize: function(options) {
        this.template = options.model.attributes.template;
        return this.bindTo(this.model, "change", this.render);
      },
      tagName: 'li',
      className: "list_item",
      events: {
        "click #search-btn": "update"
      },
      update: function() {
        var href, searchField;

        searchField = $('#search-main').val();
        if (searchField.length < 1) {
          return alert("Please Enter Text");
        } else {
          href = "##searching/" + searchField;
          return window.location = href;
        }
      }
    });
    searchView = Backbone.Marionette.CompositeView.extend({
      itemView: searchsView,
      itemViewOptions: this.model,
      template: "#wrapper_dashboard",
      itemViewContainer: "ul",
      appendHtml: function(collectionView, itemView) {
        return collectionView.$("#dashboard_insert").append(itemView.el);
      }
    });
    return Meshable.vent.on("goto:search", function() {
      var search;

      search = new searchView({
        collection: make_collection()
      });
      Meshable.currentpage = "search";
      search.render();
      $('#search').empty();
      $('#search').append($(search.el));
      return Meshable.changePage(search, false);
    });
  });

}).call(this);
